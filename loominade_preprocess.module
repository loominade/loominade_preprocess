<?php

/**
 * @file
 * Primary module hooks for Loominade preprocess module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Render\Element;

function loominade_preprocess_entity_view_alter(array &$build, EntityInterface $entity) {

  foreach ($build as $key => $field) {
    if (str_starts_with($key, 'field_')) {
      foreach (Element::children($field) as $key2) {
        if ($field['#field_type'] == 'entity_reference_revisions' || $field['#field_type'] == 'entity_reference') {
          $entity_type = $field["#object"]->getFieldDefinitions()[$key]->getFieldStorageDefinition()->getSetting('target_type');
          if (!isset($build[$entity_type . 's'])) {
            $build[$entity_type . 's'] = [
              '#access' => FALSE,
            ];
          }
          $key_name = str_replace('field_', '', $field['#field_name'] );
          $value = $field[$key2];
          if (isset($value['#' . $entity_type])) {
            $target_entity = $value['#' . $entity_type];
            $view_mode = $value['#view_mode'];

            $view_builder = Drupal::entityTypeManager()->getViewBuilder($entity_type);
            $build[$entity_type . 's'][$key_name][$key2] = $view_builder->view($target_entity, $view_mode);
          }
          if (isset($build[$entity_type . 's'][$key_name][$key2])) {
            if (isset($build[$entity_type . 's'][$key_name][$key2]['#pre_render'])) {
              foreach ($build[$entity_type . 's'][$key_name][$key2]['#pre_render'] as $callable) {
                $build[$entity_type . 's'][$key_name][$key2] = call_user_func($callable, $build[$entity_type . 's'][$key_name][$key2]);
              }
            }
          }
        }
      }
    }
  }

}
